name: "Docker Build and Push"

on:
  push:
  workflow_dispatch:

env:
  PROJECT: frps
  CUSTOM_VERSION: "0.28.2"

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Validate Docker Hub Username
        id: validate
        run: |
          # 验证用户名是否有效
          USERNAME="${{ secrets.DOCKER_USERNAME }}"
          if [[ -z "$USERNAME" ]]; then
            echo "❌ DOCKER_USERNAME secret is empty"
            exit 1
          fi
          
          # Docker Hub 用户名验证（小写字母、数字、连字符）
          if [[ ! "$USERNAME" =~ ^[a-z0-9][a-z0-9_-]*$ ]]; then
            echo "❌ Invalid Docker Hub username format: $USERNAME"
            echo "   Username must contain only lowercase letters, numbers, hyphens and underscores"
            exit 1
          fi
          
          echo "✅ Valid Docker Hub username: $USERNAME"
          echo "PROJECT_NAME=${{ env.PROJECT }}" >> $GITHUB_ENV
          echo "IMAGE_VERSION=${{ env.CUSTOM_VERSION }}" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and Push Multi-Arch Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.PROJECT }}:${{ env.CUSTOM_VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false

      - name: Verify Pushed Image
        run: |
          echo "✅ Successfully pushed Docker image:"
          echo "   ${{ secrets.DOCKER_USERNAME }}/${{ env.PROJECT }}:${{ env.CUSTOM_VERSION }}"

      - name: Sync README.md to Docker Hub
        uses: ms-jpq/sync-dockerhub-readme@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: ${{ secrets.DOCKER_USERNAME }}/${{ env.PROJECT }}
          readme: "./README.md"
